# This is a basic workflow that is manually triggered

name: Build and push

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
  push:
    branches:
      - main
    tags:
      - v*.*.*

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Restore maven cache
        id: cache-maven-restore
        uses: actions/cache/restore@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-DWM_maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-DWM_maven-
      
      - name: Set VERSION environment variable
        run: echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          cache-from: type=local,src=/var/.buildx-cache,mode=max
          cache-to: type=local,dest=/var/.buildx-cache,mode=max
          push: true
          tags: |
            ${{ vars.IMAGE_NAME }}:latest
            ${{ vars.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ vars.IMAGE_NAME }}:${{ github.sha }}
      
      - name: Save maven cache
        uses: actions/cache/save@v3
        with:
          path: ~/.m2
          key: ${{ steps.cache-maven-restore.outputs.cache-primary-key }}
      # - name: Call remote jenkins using webhook
      #   run: |
      #     curl -X POST \
      #         -H "Content-Type: application/json" \
      #         -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      #         -d '{"event_type": "dwm_master_tag", "client_payload": {"image_name": "clothes_marketplace:${{ env.VERSION }}", "key2": "value2"}}' \
      #       https://jenkins.example.com/github-webhook/
