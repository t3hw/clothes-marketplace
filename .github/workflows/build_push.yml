# This is a basic workflow that is manually triggered

name: Build and push

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  release:
    types: [created, edited]
    if: github.event.release.draft == false && github.event.release.prerelease == false

jobs:
  build-and-push:
    # if: github.event.release.draft == false && github.event.release.prerelease == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Set VERSION environment variable
        run: echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Restore buildx cache
        id: cache-buildx-restore
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ GITHUB_REPOSITORY }}_buildx-${{ hashFiles('/tmp/.buildx-cache') }}
          restore-keys: |
            ${{ runner.os }}-${{ GITHUB_REPOSITORY }}_buildx-
      
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: true
          tags: |
            ${{ vars.IMAGE_NAME }}:latest
            ${{ vars.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ vars.IMAGE_NAME }}:${{ github.sha }}
  # deploy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Set VERSION environment variable
  #       run: echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV

  #     - name: Trigger Jenkins job
  #       run: |
  #         curl -X POST \
  #             -H "Content-Type: application/json" \
  #             -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  #             -d '{"event_type": "deploy_image", "client_payload": {"image": "${{ vars.IMAGE_NAME }}:${{ env.VERSION }}", "repository": "${{ GITHUB_REPOSITORY }}, "branch_tag": "${{ GITHUB_REF_NAME }}"}}' \
  #           https://jenkins.webhose.io/github-webhook/
